
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module test_ADC(

	//////////// ADC //////////
	output		          		ADC_CONVST,
	output		          		ADC_DIN,
	input 		          		ADC_DOUT,
	output		          		ADC_SCLK,

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
	inout 		    [35:0]		GPIO0GPIO
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

reg ADC_in = 1'b0;


//=======================================================
//  Structural coding
//=======================================================

nios_ADC nios
(
	.adc0_sclk(ADC_SCLK),
	.adc0_cs_n(ADC_CONVST),
	.adc0_dout(ADC_DOUT),
	.adc0_din(ADC_DIN),
	.clk_clk(CLOCK_50),
	.key_export(KEY[3:1]),
	.ledr_export(LEDR),
	.reset_reset_n(KEY[0]),
	.signal_out_export(GPIO0GPIO[0])
);

assign GPIO0GPIO[35] = ADC_in;

always @(negedge KEY[3])
begin
	
	ADC_in = ADC_in + 1'b1;
	
end

endmodule
